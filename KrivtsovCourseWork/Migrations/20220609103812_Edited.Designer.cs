// <auto-generated />
using System;
using KrivtsovCourseWork.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KrivtsovCourseWork.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220609103812_Edited")]
    partial class Edited
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.Diagnosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PatientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VisitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("VisitId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.Diagnosis", b =>
                {
                    b.HasOne("KrivtsovCourseWork.Models.DatabaseModel.Patient", null)
                        .WithMany("Diagnosis")
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.Doctor", b =>
                {
                    b.HasOne("KrivtsovCourseWork.Models.DatabaseModel.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.Patient", b =>
                {
                    b.HasOne("KrivtsovCourseWork.Models.DatabaseModel.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("KrivtsovCourseWork.Models.DatabaseModel.Visit", "Visit")
                        .WithMany()
                        .HasForeignKey("VisitId");

                    b.Navigation("Doctor");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("KrivtsovCourseWork.Models.DatabaseModel.Patient", b =>
                {
                    b.Navigation("Diagnosis");
                });
#pragma warning restore 612, 618
        }
    }
}
